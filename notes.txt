=-=-=-=-=
| Nodes |
=-=-=-=-=

---------------
roboclaw_driver
---------------
INPUT:  roboclaw/speed_command
    Msg: roboclaw_driver.SpeedCommand
    From: base_node

OUTPUT: roboclaw/stats
    Msg: roboclaw_driver.Stats


---------
base_node
---------
INPUT:  roboclaw/stats
    Msg: roboclaw_driver.Stats
    From: roboclaw_node 

INPUT:  base_node/cmd_vel
    Msg: Twist
    From: pilot_node or teleop_node

OUTPUT: base_node/speed_command
    Msg: roboclaw_driver.SpeedCommand
    To: roboclaw_node

OUTPUT: base_ndoe/odom
    Msg: Odometry
    To: 

Currently, the base node keeps track of its Pose and Velocities relative to the World frame.
This could get moved out of the base into another node (like the Pilot) so the base only needs
to be concerned with operating the base. Then other nodes can focus on determining the current
location using other types of sensors.

------------
sensors_node
------------
OUTPUT: ir_sensors/proximity
    Msg: b2.Proximity
    To: pilot_node

MCP3008
https://learn.adafruit.com/raspberry-pi-analog-to-digital-converters/mcp3008
To use hardware SPI first make sure you've enabled SPI using the raspi-config tool.
Be sure to answer yes to both enabling the SPI interface and loading the SPI kernel module,
then reboot the Pi.  Check you can see a /dev/spidev0.0 and /dev/spidev0.1 device when you run
the ls -l /dev/spi* command before continuing.

-----------
pilot_node
----------
INPUT: ir_sensors/proximity
    Msg: b2.Proximity
    From: sensors_node

INPUT: base_node/odom
    Msg: Odometry
    From: base_node

OUTPUT: base_node/cmd_vel
    Msg: Twist
    To: base_node


-----------
teleop_node
-----------
OUTPUT: base_node/cmd_vel
    Msg: Twist
    To: base_node


=-=-=-=-=-=-=-=-=
| industrial_ci |
=-=-=-=-=-=-=-=-=
rosrun industrial_ci run_travis -




=-=-=-=-=-=-=-=-=-=-=
| Roboclaw udev notes |
=-=-=-=-=-=-=-=-=-=-=
Find the Vendor and Product IDs from lsusb

    root@b2:~# lsusb
    Bus 001 Device 004: ID 03eb:2404 Atmel Corp. The Micro
    Bus 001 Device 005: ID 03eb:2404 Atmel Corp. The Micro

root: udevadm monitor  # to see udev events

Above, the Atmel Corp devices "ID 03eb:2404" equals: Vendor:03eb & Product: 2404
Then, find the serial number of a USB device (Ex: /dev/ttyACM0)

    root@b2:~# udevadm info -a -n /dev/ttyACM0 | grep '{devpath}' | head -n1
        ATTRS{devpath}=="1.4"

Raspberry Pi 3 USB "devpaths":
Each USB port has a fixed "devpath" that we can use to identify the Roboclaw,
assuming we always plug the same Roboclaw into the same USB port.
=============================
|Ether|  [USB 1.2]  [USB 1.4]
| Net |  [USB 1.3]  [USB 1.5]
=============================

# Create:  /etc/udev/rules.d/99-usb-serial.rules
SUBSYSTEM=="tty", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2404", ATTRS{devpath}=="1.4", SYMLINK+="roboclaw_front"
SUBSYSTEM=="tty", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2404", ATTRS{devpath}=="1.5", SYMLINK+="roboclaw_rear"

Source: http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/

-------------------------
cd $ROS_WS
catkin_make
apt-get update
rosdep update
rosdep install --from-paths src --ignore-src -r -y